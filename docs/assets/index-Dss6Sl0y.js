(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function i(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=i(o);fetch(o.href,s)}})();var Z,f,je,Ie,A,Oe,He,re,pe,oe,se,F={},Fe=[],Ye=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,_e=Array.isArray;function $(t,e){for(var i in e)t[i]=e[i];return t}function Me(t){var e=t.parentNode;e&&e.removeChild(t)}function et(t,e,i){var r,o,s,l={};for(s in e)s=="key"?r=e[s]:s=="ref"?o=e[s]:l[s]=e[s];if(arguments.length>2&&(l.children=arguments.length>3?Z.call(arguments,2):i),typeof t=="function"&&t.defaultProps!=null)for(s in t.defaultProps)l[s]===void 0&&(l[s]=t.defaultProps[s]);return V(t,l,r,o,null)}function V(t,e,i,r,o){var s={type:t,props:e,key:i,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:o??++je,__i:-1,__u:0};return o==null&&f.vnode!=null&&f.vnode(s),s}function k(t){return t.children}function I(t,e){this.props=t,this.context=e}function L(t,e){if(e==null)return t.__?L(t.__,t.__i+1):null;for(var i;e<t.__k.length;e++)if((i=t.__k[e])!=null&&i.__e!=null)return i.__e;return typeof t.type=="function"?L(t):null}function Be(t){var e,i;if((t=t.__)!=null&&t.__c!=null){for(t.__e=t.__c.base=null,e=0;e<t.__k.length;e++)if((i=t.__k[e])!=null&&i.__e!=null){t.__e=t.__c.base=i.__e;break}return Be(t)}}function xe(t){(!t.__d&&(t.__d=!0)&&A.push(t)&&!Q.__r++||Oe!==f.debounceRendering)&&((Oe=f.debounceRendering)||He)(Q)}function Q(){var t,e,i,r,o,s,l,c;for(A.sort(re);t=A.shift();)t.__d&&(e=A.length,r=void 0,s=(o=(i=t).__v).__e,l=[],c=[],i.__P&&((r=$({},o)).__v=o.__v+1,f.vnode&&f.vnode(r),ue(i.__P,r,o,i.__n,i.__P.ownerSVGElement!==void 0,32&o.__u?[s]:null,l,s??L(o),!!(32&o.__u),c),r.__v=o.__v,r.__.__k[r.__i]=r,Re(l,r,c),r.__e!=s&&Be(r)),A.length>e&&A.sort(re));Q.__r=0}function Ue(t,e,i,r,o,s,l,c,h,d,_){var a,O,p,v,T,y=r&&r.__k||Fe,g=e.length;for(i.__d=h,tt(i,e,y),h=i.__d,a=0;a<g;a++)(p=i.__k[a])!=null&&typeof p!="boolean"&&typeof p!="function"&&(O=p.__i===-1?F:y[p.__i]||F,p.__i=a,ue(t,p,O,o,s,l,c,h,d,_),v=p.__e,p.ref&&O.ref!=p.ref&&(O.ref&&fe(O.ref,null,p),_.push(p.ref,p.__c||v,p)),T==null&&v!=null&&(T=v),65536&p.__u||O.__k===p.__k?(h&&!h.isConnected&&(h=L(O)),h=qe(p,h,t)):typeof p.type=="function"&&p.__d!==void 0?h=p.__d:v&&(h=v.nextSibling),p.__d=void 0,p.__u&=-196609);i.__d=h,i.__e=T}function tt(t,e,i){var r,o,s,l,c,h=e.length,d=i.length,_=d,a=0;for(t.__k=[],r=0;r<h;r++)l=r+a,(o=t.__k[r]=(o=e[r])==null||typeof o=="boolean"||typeof o=="function"?null:typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?V(null,o,null,null,null):_e(o)?V(k,{children:o},null,null,null):o.constructor===void 0&&o.__b>0?V(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o)!=null?(o.__=t,o.__b=t.__b+1,c=nt(o,i,l,_),o.__i=c,s=null,c!==-1&&(_--,(s=i[c])&&(s.__u|=131072)),s==null||s.__v===null?(c==-1&&a--,typeof o.type!="function"&&(o.__u|=65536)):c!==l&&(c===l+1?a++:c>l?_>h-l?a+=c-l:a--:c<l?c==l-1&&(a=c-l):a=0,c!==r+a&&(o.__u|=65536))):(s=i[l])&&s.key==null&&s.__e&&!(131072&s.__u)&&(s.__e==t.__d&&(t.__d=L(s)),ae(s,s,!1),i[l]=null,_--);if(_)for(r=0;r<d;r++)(s=i[r])!=null&&!(131072&s.__u)&&(s.__e==t.__d&&(t.__d=L(s)),ae(s,s))}function qe(t,e,i){var r,o;if(typeof t.type=="function"){for(r=t.__k,o=0;r&&o<r.length;o++)r[o]&&(r[o].__=t,e=qe(r[o],e,i));return e}t.__e!=e&&(i.insertBefore(t.__e,e||null),e=t.__e);do e=e&&e.nextSibling;while(e!=null&&e.nodeType===8);return e}function nt(t,e,i,r){var o=t.key,s=t.type,l=i-1,c=i+1,h=e[i];if(h===null||h&&o==h.key&&s===h.type&&!(131072&h.__u))return i;if(r>(h!=null&&!(131072&h.__u)?1:0))for(;l>=0||c<e.length;){if(l>=0){if((h=e[l])&&!(131072&h.__u)&&o==h.key&&s===h.type)return l;l--}if(c<e.length){if((h=e[c])&&!(131072&h.__u)&&o==h.key&&s===h.type)return c;c++}}return-1}function ke(t,e,i){e[0]==="-"?t.setProperty(e,i??""):t[e]=i==null?"":typeof i!="number"||Ye.test(e)?i:i+"px"}function R(t,e,i,r,o){var s;e:if(e==="style")if(typeof i=="string")t.style.cssText=i;else{if(typeof r=="string"&&(t.style.cssText=r=""),r)for(e in r)i&&e in i||ke(t.style,e,"");if(i)for(e in i)r&&i[e]===r[e]||ke(t.style,e,i[e])}else if(e[0]==="o"&&e[1]==="n")s=e!==(e=e.replace(/(PointerCapture)$|Capture$/i,"$1")),e=e.toLowerCase()in t||e==="onFocusOut"||e==="onFocusIn"?e.toLowerCase().slice(2):e.slice(2),t.l||(t.l={}),t.l[e+s]=i,i?r?i.u=r.u:(i.u=pe,t.addEventListener(e,s?se:oe,s)):t.removeEventListener(e,s?se:oe,s);else{if(o)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!="width"&&e!="height"&&e!="href"&&e!="list"&&e!="form"&&e!="tabIndex"&&e!="download"&&e!="rowSpan"&&e!="colSpan"&&e!="role"&&e in t)try{t[e]=i??"";break e}catch{}typeof i=="function"||(i==null||i===!1&&e[4]!=="-"?t.removeAttribute(e):t.setAttribute(e,i))}}function Se(t){return function(e){if(this.l){var i=this.l[e.type+t];if(e.t==null)e.t=pe++;else if(e.t<i.u)return;return i(f.event?f.event(e):e)}}}function ue(t,e,i,r,o,s,l,c,h,d){var _,a,O,p,v,T,y,g,b,C,B,j,we,U,ee,S=e.type;if(e.constructor!==void 0)return null;128&i.__u&&(h=!!(32&i.__u),s=[c=e.__e=i.__e]),(_=f.__b)&&_(e);e:if(typeof S=="function")try{if(g=e.props,b=(_=S.contextType)&&r[_.__c],C=_?b?b.props.value:_.__:r,i.__c?y=(a=e.__c=i.__c).__=a.__E:("prototype"in S&&S.prototype.render?e.__c=a=new S(g,C):(e.__c=a=new I(g,C),a.constructor=S,a.render=rt),b&&b.sub(a),a.props=g,a.state||(a.state={}),a.context=C,a.__n=r,O=a.__d=!0,a.__h=[],a._sb=[]),a.__s==null&&(a.__s=a.state),S.getDerivedStateFromProps!=null&&(a.__s==a.state&&(a.__s=$({},a.__s)),$(a.__s,S.getDerivedStateFromProps(g,a.__s))),p=a.props,v=a.state,a.__v=e,O)S.getDerivedStateFromProps==null&&a.componentWillMount!=null&&a.componentWillMount(),a.componentDidMount!=null&&a.__h.push(a.componentDidMount);else{if(S.getDerivedStateFromProps==null&&g!==p&&a.componentWillReceiveProps!=null&&a.componentWillReceiveProps(g,C),!a.__e&&(a.shouldComponentUpdate!=null&&a.shouldComponentUpdate(g,a.__s,C)===!1||e.__v===i.__v)){for(e.__v!==i.__v&&(a.props=g,a.state=a.__s,a.__d=!1),e.__e=i.__e,e.__k=i.__k,e.__k.forEach(function(q){q&&(q.__=e)}),B=0;B<a._sb.length;B++)a.__h.push(a._sb[B]);a._sb=[],a.__h.length&&l.push(a);break e}a.componentWillUpdate!=null&&a.componentWillUpdate(g,a.__s,C),a.componentDidUpdate!=null&&a.__h.push(function(){a.componentDidUpdate(p,v,T)})}if(a.context=C,a.props=g,a.__P=t,a.__e=!1,j=f.__r,we=0,"prototype"in S&&S.prototype.render){for(a.state=a.__s,a.__d=!1,j&&j(e),_=a.render(a.props,a.state,a.context),U=0;U<a._sb.length;U++)a.__h.push(a._sb[U]);a._sb=[]}else do a.__d=!1,j&&j(e),_=a.render(a.props,a.state,a.context),a.state=a.__s;while(a.__d&&++we<25);a.state=a.__s,a.getChildContext!=null&&(r=$($({},r),a.getChildContext())),O||a.getSnapshotBeforeUpdate==null||(T=a.getSnapshotBeforeUpdate(p,v)),Ue(t,_e(ee=_!=null&&_.type===k&&_.key==null?_.props.children:_)?ee:[ee],e,i,r,o,s,l,c,h,d),a.base=e.__e,e.__u&=-161,a.__h.length&&l.push(a),y&&(a.__E=a.__=null)}catch(q){e.__v=null,h||s!=null?(e.__e=c,e.__u|=h?160:32,s[s.indexOf(c)]=null):(e.__e=i.__e,e.__k=i.__k),f.__e(q,e,i)}else s==null&&e.__v===i.__v?(e.__k=i.__k,e.__e=i.__e):e.__e=it(i.__e,e,i,r,o,s,l,h,d);(_=f.diffed)&&_(e)}function Re(t,e,i){e.__d=void 0;for(var r=0;r<i.length;r++)fe(i[r],i[++r],i[++r]);f.__c&&f.__c(e,t),t.some(function(o){try{t=o.__h,o.__h=[],t.some(function(s){s.call(o)})}catch(s){f.__e(s,o.__v)}})}function it(t,e,i,r,o,s,l,c,h){var d,_,a,O,p,v,T,y=i.props,g=e.props,b=e.type;if(b==="svg"&&(o=!0),s!=null){for(d=0;d<s.length;d++)if((p=s[d])&&"setAttribute"in p==!!b&&(b?p.localName===b:p.nodeType===3)){t=p,s[d]=null;break}}if(t==null){if(b===null)return document.createTextNode(g);t=o?document.createElementNS("http://www.w3.org/2000/svg",b):document.createElement(b,g.is&&g),s=null,c=!1}if(b===null)y===g||c&&t.data===g||(t.data=g);else{if(s=s&&Z.call(t.childNodes),y=i.props||F,!c&&s!=null)for(y={},d=0;d<t.attributes.length;d++)y[(p=t.attributes[d]).name]=p.value;for(d in y)p=y[d],d=="children"||(d=="dangerouslySetInnerHTML"?a=p:d==="key"||d in g||R(t,d,null,p,o));for(d in g)p=g[d],d=="children"?O=p:d=="dangerouslySetInnerHTML"?_=p:d=="value"?v=p:d=="checked"?T=p:d==="key"||c&&typeof p!="function"||y[d]===p||R(t,d,p,y[d],o);if(_)c||a&&(_.__html===a.__html||_.__html===t.innerHTML)||(t.innerHTML=_.__html),e.__k=[];else if(a&&(t.innerHTML=""),Ue(t,_e(O)?O:[O],e,i,r,o&&b!=="foreignObject",s,l,s?s[0]:i.__k&&L(i,0),c,h),s!=null)for(d=s.length;d--;)s[d]!=null&&Me(s[d]);c||(d="value",v!==void 0&&(v!==t[d]||b==="progress"&&!v||b==="option"&&v!==y[d])&&R(t,d,v,y[d],!1),d="checked",T!==void 0&&T!==t[d]&&R(t,d,T,y[d],!1))}return t}function fe(t,e,i){try{typeof t=="function"?t(e):t.current=e}catch(r){f.__e(r,i)}}function ae(t,e,i){var r,o;if(f.unmount&&f.unmount(t),(r=t.ref)&&(r.current&&r.current!==t.__e||fe(r,null,e)),(r=t.__c)!=null){if(r.componentWillUnmount)try{r.componentWillUnmount()}catch(s){f.__e(s,e)}r.base=r.__P=null}if(r=t.__k)for(o=0;o<r.length;o++)r[o]&&ae(r[o],e,i||typeof t.type!="function");i||t.__e==null||Me(t.__e),t.__c=t.__=t.__e=t.__d=void 0}function rt(t,e,i){return this.constructor(t,i)}function ot(t,e,i){var r,o,s,l;f.__&&f.__(t,e),o=(r=typeof i=="function")?null:e.__k,s=[],l=[],ue(e,t=(!r&&i||e).__k=et(k,null,[t]),o||F,F,e.ownerSVGElement!==void 0,!r&&i?[i]:o?null:e.firstChild?Z.call(e.childNodes):null,s,!r&&i?i:o?o.__e:e.firstChild,r,l),Re(s,t,l)}Z=Fe.slice,f={__e:function(t,e,i,r){for(var o,s,l;e=e.__;)if((o=e.__c)&&!o.__)try{if((s=o.constructor)&&s.getDerivedStateFromError!=null&&(o.setState(s.getDerivedStateFromError(t)),l=o.__d),o.componentDidCatch!=null&&(o.componentDidCatch(t,r||{}),l=o.__d),l)return o.__E=o}catch(c){t=c}throw t}},je=0,Ie=function(t){return t!=null&&t.constructor==null},I.prototype.setState=function(t,e){var i;i=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=$({},this.state),typeof t=="function"&&(t=t($({},i),this.props)),t&&$(i,t),t!=null&&this.__v&&(e&&this._sb.push(e),xe(this))},I.prototype.forceUpdate=function(t){this.__v&&(this.__e=!0,t&&this.__h.push(t),xe(this))},I.prototype.render=k,A=[],He=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,re=function(t,e){return t.__v.__b-e.__v.__b},Q.__r=0,pe=0,oe=Se(!1),se=Se(!0);var le,x,te,Te,ce=0,Ve=[],z=[],m=f,Ce=m.__b,$e=m.__r,Ae=m.diffed,Le=m.__c,De=m.unmount,Pe=m.__;function st(t,e){m.__h&&m.__h(x,t,ce||e),ce=0;var i=x.__H||(x.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:z}),i.__[t]}function at(t){return ce=5,J(function(){return{current:t}},[])}function J(t,e){var i=st(le++,7);return dt(i.__H,e)?(i.__V=t(),i.i=e,i.__h=t,i.__V):i.__}function lt(){for(var t;t=Ve.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(W),t.__H.__h.forEach(de),t.__H.__h=[]}catch(e){t.__H.__h=[],m.__e(e,t.__v)}}m.__b=function(t){x=null,Ce&&Ce(t)},m.__=function(t,e){t&&e.__k&&e.__k.__m&&(t.__m=e.__k.__m),Pe&&Pe(t,e)},m.__r=function(t){$e&&$e(t),le=0;var e=(x=t.__c).__H;e&&(te===x?(e.__h=[],x.__h=[],e.__.forEach(function(i){i.__N&&(i.__=i.__N),i.__V=z,i.__N=i.i=void 0})):(e.__h.forEach(W),e.__h.forEach(de),e.__h=[],le=0)),te=x},m.diffed=function(t){Ae&&Ae(t);var e=t.__c;e&&e.__H&&(e.__H.__h.length&&(Ve.push(e)!==1&&Te===m.requestAnimationFrame||((Te=m.requestAnimationFrame)||ct)(lt)),e.__H.__.forEach(function(i){i.i&&(i.__H=i.i),i.__V!==z&&(i.__=i.__V),i.i=void 0,i.__V=z})),te=x=null},m.__c=function(t,e){e.some(function(i){try{i.__h.forEach(W),i.__h=i.__h.filter(function(r){return!r.__||de(r)})}catch(r){e.some(function(o){o.__h&&(o.__h=[])}),e=[],m.__e(r,i.__v)}}),Le&&Le(t,e)},m.unmount=function(t){De&&De(t);var e,i=t.__c;i&&i.__H&&(i.__H.__.forEach(function(r){try{W(r)}catch(o){e=o}}),i.__H=void 0,e&&m.__e(e,i.__v))};var Ee=typeof requestAnimationFrame=="function";function ct(t){var e,i=function(){clearTimeout(r),Ee&&cancelAnimationFrame(e),setTimeout(t)},r=setTimeout(i,100);Ee&&(e=requestAnimationFrame(i))}function W(t){var e=x,i=t.__c;typeof i=="function"&&(t.__c=void 0,i()),x=e}function de(t){var e=x;t.__c=t.__(),x=e}function dt(t,e){return!t||t.length!==e.length||e.some(function(i,r){return i!==t[r]})}var ht=Symbol.for("preact-signals");function ge(){if(D>1)D--;else{for(var t,e=!1;H!==void 0;){var i=H;for(H=void 0,he++;i!==void 0;){var r=i.o;if(i.o=void 0,i.f&=-3,!(8&i.f)&&Qe(i))try{i.c()}catch(o){e||(t=o,e=!0)}i=r}}if(he=0,D--,e)throw t}}var u=void 0,H=void 0,D=0,he=0,G=0;function ze(t){if(u!==void 0){var e=t.n;if(e===void 0||e.t!==u)return e={i:0,S:t,p:u.s,n:void 0,t:u,e:void 0,x:void 0,r:e},u.s!==void 0&&(u.s.n=e),u.s=e,t.n=e,32&u.f&&t.S(e),e;if(e.i===-1)return e.i=0,e.n!==void 0&&(e.n.p=e.p,e.p!==void 0&&(e.p.n=e.n),e.p=u.s,e.n=void 0,u.s.n=e,u.s=e),e}}function w(t){this.v=t,this.i=0,this.n=void 0,this.t=void 0}w.prototype.brand=ht;w.prototype.h=function(){return!0};w.prototype.S=function(t){this.t!==t&&t.e===void 0&&(t.x=this.t,this.t!==void 0&&(this.t.e=t),this.t=t)};w.prototype.U=function(t){if(this.t!==void 0){var e=t.e,i=t.x;e!==void 0&&(e.x=i,t.e=void 0),i!==void 0&&(i.e=e,t.x=void 0),t===this.t&&(this.t=i)}};w.prototype.subscribe=function(t){var e=this;return ve(function(){var i=e.value,r=u;u=void 0;try{t(i)}finally{u=r}})};w.prototype.valueOf=function(){return this.value};w.prototype.toString=function(){return this.value+""};w.prototype.toJSON=function(){return this.value};w.prototype.peek=function(){var t=u;u=void 0;try{return this.value}finally{u=t}};Object.defineProperty(w.prototype,"value",{get:function(){var t=ze(this);return t!==void 0&&(t.i=this.i),this.v},set:function(t){if(t!==this.v){if(he>100)throw new Error("Cycle detected");this.v=t,this.i++,G++,D++;try{for(var e=this.t;e!==void 0;e=e.x)e.t.N()}finally{ge()}}}});function We(t){return new w(t)}function Qe(t){for(var e=t.s;e!==void 0;e=e.n)if(e.S.i!==e.i||!e.S.h()||e.S.i!==e.i)return!0;return!1}function Ge(t){for(var e=t.s;e!==void 0;e=e.n){var i=e.S.n;if(i!==void 0&&(e.r=i),e.S.n=e,e.i=-1,e.n===void 0){t.s=e;break}}}function Ke(t){for(var e=t.s,i=void 0;e!==void 0;){var r=e.p;e.i===-1?(e.S.U(e),r!==void 0&&(r.n=e.n),e.n!==void 0&&(e.n.p=r)):i=e,e.S.n=e.r,e.r!==void 0&&(e.r=void 0),e=r}t.s=i}function P(t){w.call(this,void 0),this.x=t,this.s=void 0,this.g=G-1,this.f=4}(P.prototype=new w).h=function(){if(this.f&=-3,1&this.f)return!1;if((36&this.f)==32||(this.f&=-5,this.g===G))return!0;if(this.g=G,this.f|=1,this.i>0&&!Qe(this))return this.f&=-2,!0;var t=u;try{Ge(this),u=this;var e=this.x();(16&this.f||this.v!==e||this.i===0)&&(this.v=e,this.f&=-17,this.i++)}catch(i){this.v=i,this.f|=16,this.i++}return u=t,Ke(this),this.f&=-2,!0};P.prototype.S=function(t){if(this.t===void 0){this.f|=36;for(var e=this.s;e!==void 0;e=e.n)e.S.S(e)}w.prototype.S.call(this,t)};P.prototype.U=function(t){if(this.t!==void 0&&(w.prototype.U.call(this,t),this.t===void 0)){this.f&=-33;for(var e=this.s;e!==void 0;e=e.n)e.S.U(e)}};P.prototype.N=function(){if(!(2&this.f)){this.f|=6;for(var t=this.t;t!==void 0;t=t.x)t.t.N()}};Object.defineProperty(P.prototype,"value",{get:function(){if(1&this.f)throw new Error("Cycle detected");var t=ze(this);if(this.h(),t!==void 0&&(t.i=this.i),16&this.f)throw this.v;return this.v}});function Ze(t){return new P(t)}function Je(t){var e=t.u;if(t.u=void 0,typeof e=="function"){D++;var i=u;u=void 0;try{e()}catch(r){throw t.f&=-2,t.f|=8,me(t),r}finally{u=i,ge()}}}function me(t){for(var e=t.s;e!==void 0;e=e.n)e.S.U(e);t.x=void 0,t.s=void 0,Je(t)}function pt(t){if(u!==this)throw new Error("Out-of-order effect");Ke(this),u=t,this.f&=-2,8&this.f&&me(this),ge()}function M(t){this.x=t,this.u=void 0,this.s=void 0,this.o=void 0,this.f=32}M.prototype.c=function(){var t=this.S();try{if(8&this.f||this.x===void 0)return;var e=this.x();typeof e=="function"&&(this.u=e)}finally{t()}};M.prototype.S=function(){if(1&this.f)throw new Error("Cycle detected");this.f|=1,this.f&=-9,Je(this),Ge(this),D++;var t=u;return u=this,pt.bind(this,t)};M.prototype.N=function(){2&this.f||(this.f|=2,this.o=H,H=this)};M.prototype.d=function(){this.f|=8,1&this.f||me(this)};function ve(t){var e=new M(t);try{e.c()}catch(i){throw e.d(),i}return e.d.bind(e)}var X,ne;function E(t,e){f[t]=e.bind(null,f[t]||function(){})}function K(t){ne&&ne(),ne=t&&t.S()}function Xe(t){var e=this,i=t.data,r=N(i);r.value=i;var o=J(function(){for(var s=e.__v;s=s.__;)if(s.__c){s.__c.__$f|=4;break}return e.__$u.c=function(){var l;!Ie(o.peek())&&((l=e.base)==null?void 0:l.nodeType)===3?e.base.data=o.peek():(e.__$f|=1,e.setState({}))},Ze(function(){var l=r.value.value;return l===0?0:l===!0?"":l||""})},[]);return o.value}Xe.displayName="_st";Object.defineProperties(w.prototype,{constructor:{configurable:!0,value:void 0},type:{configurable:!0,value:Xe},props:{configurable:!0,get:function(){return{data:this}}},__b:{configurable:!0,value:1}});E("__b",function(t,e){if(typeof e.type=="string"){var i,r=e.props;for(var o in r)if(o!=="children"){var s=r[o];s instanceof w&&(i||(e.__np=i={}),i[o]=s,r[o]=s.peek())}}t(e)});E("__r",function(t,e){K();var i,r=e.__c;r&&(r.__$f&=-2,(i=r.__$u)===void 0&&(r.__$u=i=function(o){var s;return ve(function(){s=this}),s.c=function(){r.__$f|=1,r.setState({})},s}())),X=r,K(i),t(e)});E("__e",function(t,e,i,r){K(),X=void 0,t(e,i,r)});E("diffed",function(t,e){K(),X=void 0;var i;if(typeof e.type=="string"&&(i=e.__e)){var r=e.__np,o=e.props;if(r){var s=i.U;if(s)for(var l in s){var c=s[l];c!==void 0&&!(l in r)&&(c.d(),s[l]=void 0)}else i.U=s={};for(var h in r){var d=s[h],_=r[h];d===void 0?(d=_t(i,h,_,o),s[h]=d):d.o(_,o)}}}t(e)});function _t(t,e,i,r){var o=e in t&&t.ownerSVGElement===void 0,s=We(i);return{o:function(l,c){s.value=l,r=c},d:ve(function(){var l=s.value.value;r[e]!==l&&(r[e]=l,o?t[e]=l:l?t.setAttribute(e,l):t.removeAttribute(e))})}}E("unmount",function(t,e){if(typeof e.type=="string"){var i=e.__e;if(i){var r=i.U;if(r){i.U=void 0;for(var o in r){var s=r[o];s&&s.d()}}}}else{var l=e.__c;if(l){var c=l.__$u;c&&(l.__$u=void 0,c.d())}}t(e)});E("__h",function(t,e,i,r){(r<3||r===9)&&(e.__$f|=2),t(e,i,r)});I.prototype.shouldComponentUpdate=function(t,e){var i=this.__$u;if(!(i&&i.s!==void 0||4&this.__$f)||3&this.__$f)return!0;for(var r in e)return!0;for(var o in t)if(o!=="__source"&&t[o]!==this.props[o])return!0;for(var s in this.props)if(!(s in t))return!0;return!1};function N(t){return J(function(){return We(t)},[])}function Y(t){var e=at(t);return e.current=t,X.__$f|=4,J(function(){return Ze(function(){return e.current()})},[])}const ut="green",ft="yellow-green",gt="yellow",mt="orange",vt="red",ye={best:ut,good:ft,fair:gt,bad:mt,worst:vt,"N/A":"gray","Ω(n)":"yellow","Θ(n^2)":"red","O(n^2)":"red","O(1)":"green","Ω(n^2)":"red","Ω(n log(n))":"orange","Θ(n log(n))":"orange","O(n log(n))":"orange","O(n)":"yellow","O(log(n))":"yellow-green","Ω(nk)":"green","Θ(nk)":"green","O(nk)":"green","O(n + k)":"green","Ω(n + k)":"green","Θ(n + k)":"green","Θ((n log(n))^2)":"red","O(n(log(n))^2)":"red","O(k)":"yellow","Θ(1)":"green","Θ(log(n))":"yellow-green","Θ(n)":"yellow","O(V + E)":"gray"},yt=[{name:"Big-O",notation:"O",description:"Upper bound (worst-case time complexity)",note:"Never more than"},{name:"Big-Omega",notation:"Ω",description:"Lower bound (best-case time complexity)",note:"Never less than"},{name:"Theta",notation:"Θ",description:"Tight bound (average-case time complexity)",note:"Exactly equal to"},{name:"Little-O",notation:"o",description:"Strictly smaller than upper bound (non-asymptotic)",note:"Always less than"},{name:"Little-Omega",notation:"ω",description:"Strictly greater than lower bound (non-asymptotic)",note:"Always greater than"}],bt=[{name:"Constant",notation:"O(1)",description:"Constant time regardless of input size",level:"best"},{name:"Logarithmic",notation:"O(log n)",description:"Increases logarithmically with input size",level:"good"},{name:"Linear",notation:"O(n)",description:"Increases linearly with input size",level:"fair"},{name:"Linearithmic",notation:"O(n log n)",description:"Increases in proportion to the product of input size and its logarithm",level:"fair"},{name:"Quadratic",notation:"O(n^2)",description:"Increases quadratically with input size",level:"bad"},{name:"Cubic",notation:"O(n^3)",description:"Increases cubically with input size",level:"bad"},{name:"Exponential",notation:"O(2^n)",description:"Doubles with each additional element in input",level:"worst"},{name:"Factorial",notation:"O(n!)",description:"Grows factorially with input size",level:"worst"}],wt=[{name:"Heap",description:"Uses a binary heap to extract the maximum (or minimum) element and place it in the sorted array.",time:{best:"Ω(n log(n))",average:"Θ(n log(n))",worst:"O(n log(n))"},space:{worst:"O(1)"}},{name:"Merge",description:"Divides the array, recursively sorts halves, and merges them.",time:{best:"Ω(n log(n))",average:"Θ(n log(n))",worst:"O(n log(n))"},space:{worst:"O(n)"}},{name:"Quick",description:"Chooses a pivot, partitions the array, and recursively sorts partitions.",time:{best:"Ω(n log(n))",average:"Θ(n log(n))",worst:"O(n^2)"},space:{worst:"O(log(n))"}},{name:"Tree",description:"A sorting algorithm that builds a binary search tree from the elements to be sorted, then traverses the tree to retrieve the elements in sorted order.",time:{best:"Ω(n log(n))",average:"Θ(n log(n))",worst:"O(n^2)"},space:{worst:"O(n)"}},{name:"Comb",description:"Improves upon bubble sort by using a gap sequence to eliminate turtles, or small values near the end of the list, which slows down the sorting process in bubble sort.",time:{best:"Ω(n log(n))",average:"Θ(n^2)",worst:"O(n^2)"},space:{worst:"O(1)"}},{name:"Shell",description:"Extension of insertion sort that allows the exchange of items that are far apart. It starts by sorting pairs of elements far apart from each other, then progressively reduces the gap between elements to be compared.",time:{best:"Ω(n log(n))",average:"Θ((n log(n))^2)",worst:"O(n(log(n))^2)"},space:{worst:"O(1)"}},{name:"Cube",description:"Operates by recursively dividing the array into sub-cubes, sorting each cube individually, and then merging them back together, offering a balance between time complexity and space complexity.",time:{best:"Ω(n)",average:"Θ(n log(n))",worst:"O(n log(n))"},space:{worst:"O(n)"}},{name:"Tim",description:"A hybrid sorting algorithm derived from merge sort and insertion sort, designed to perform well on real-world data and exploit existing order in the input sequence.",time:{best:"Ω(n)",average:"Θ(n log(n))",worst:"O(n log(n))"},space:{worst:"O(n)"}},{name:"Bubble",description:"Repeatedly compares adjacent elements and swaps them if they are in the wrong order.",time:{best:"Ω(n)",average:"Θ(n^2)",worst:"O(n^2)"},space:{worst:"O(1)"}},{name:"Insertion",description:"Builds the final sorted array one element at a time by inserting each element into its position.",time:{best:"Ω(n)",average:"Θ(n^2)",worst:"O(n^2)"},space:{worst:"O(1)"}},{name:"Selection",description:"Finds the smallest (or largest) element and places it at the beginning (or end) of the array.",time:{best:"Ω(n^2)",average:"Θ(n^2)",worst:"O(n^2)"},space:{worst:"O(1)"}},{name:"Bucket",description:"Divides the input array into a number of buckets, each of which is then sorted individually, typically with another sorting algorithm or by recursively applying bucket sort.",time:{best:"Ω(n + k)",average:"Θ(n + k)",worst:"O(n^2)"},space:{worst:"O(n)"}},{name:"Counting",description:"An integer sorting algorithm that works by determining the number of objects having distinct key values and using arithmetic to determine their position in the output array.",time:{best:"Ω(n + k)",average:"Θ(n + k)",worst:"O(n + k)"},space:{worst:"O(k)"}},{name:"Radix",description:"Sorts based on individual digits or characters, from least to most significant.",time:{best:"Ω(nk)",average:"Θ(nk)",worst:"O(nk)"},space:{worst:"O(n + k)"}}],Ot=[{name:"Linear",description:"Sequentially checks each element in a list until a match is found.",average:"Θ(n)",worst:"O(n)"},{name:"Binary",description:"Efficiently locates a target value within a sorted array by repeatedly dividing the search interval in half.",average:"Θ(log n)",worst:"O(log n)"}],xt=[{name:"Depth-First",description:"Explores all neighbor nodes at the present depth prior to moving on to nodes at the next depth level.",average:"Θ(v + e)",worst:"O(v + e)"},{name:"Breadth-First",description:"Traverses as far as possible along each branch before backtracking.",average:"Θ(v + e)",worst:"O(v + e)"},{name:"Bellman-Ford",description:"Finds the shortest path from a single source vertex to all other vertices in a weighted graph, including negative edge weights.",average:"Θ(v * e)",worst:"O(v * e)"},{name:"Dijkstra's",description:"Finds the shortest path from a single source vertex to all other vertices in a weighted graph, with non-negative edge weights.",average:"Θ((v + e) log v)",worst:"O((v + e) log v)"},{name:"A-Star (A*)",description:"An informed search algorithm that uses a heuristic to estimate the cost of reaching the goal, combining the cost to reach the current node and the estimated cost to reach the goal.",average:"Θ(b ^ d)",worst:"O(b ^ d)"}],Ne={array:Ot,graph:xt},kt=[{name:"Array",shape:"Array.png",group:"List",description:"A collection of elements, each identified by an index or a key",time:{average:{access:"Θ(1)",search:"Θ(n)",insertion:"Θ(n)",deletion:"Θ(n)"},worst:{access:"O(1)",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n)"}},{name:"Stack",shape:"Stack.png",group:"List",description:"Follows the Last-In-First-Out (LIFO) principle",time:{average:{access:"Θ(n)",search:"Θ(n)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"O(n)",search:"O(n)",insertion:"O(1)",deletion:"O(1)"}},space:{worst:"O(n)"}},{name:"Queue",shape:"Queue.png",group:"List",description:"Follows the First-In-First-Out (FIFO) principle",time:{average:{access:"Θ(n)",search:"Θ(n)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"O(n)",search:"O(n)",insertion:"O(1)",deletion:"O(1)"}},space:{worst:"O(n)"}},{name:"Single-Linked-List",shape:"Single-Linked-List.png",group:"List",description:"Consists of nodes, each containing data and a reference to the next node. It allows efficient insertion and deletion at the head or tail",time:{average:{access:"Θ(n)",search:"Θ(n)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"O(n)",search:"O(n)",insertion:"O(1)",deletion:"O(1)"}},space:{worst:"O(n)"}},{name:"Double-Linked-List",shape:"Double-Linked-List.png",group:"List",description:"Extends the single-linked list by having references to both the next and previous nodes. It enables bidirectional traversal",time:{average:{access:"Θ(n)",search:"Θ(n)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"O(n)",search:"O(n)",insertion:"O(1)",deletion:"O(1)"}},space:{worst:"O(n)"}},{name:"Skip-List",shape:"Skip-List.png",group:"List",description:"Probabilistic data structure, it uses multiple levels of linked lists",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(n)",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n log(n))"}},{name:"Binary-Search-Tree",shape:"Binary-AVL-Tree.png",group:"Tree",description:"Consists of nodes, each having at most two children",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(n)",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n)"}},{name:"Cartesian-Tree",shape:"Cartesian-Tree.png",group:"Tree",description:"Binary tree where the values of nodes satisfy the heap property with respect to both the parent and the child",time:{average:{access:"N/A",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"N/A",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n)"}},{name:"B-Tree",shape:"B-Tree.png",group:"Tree",description:"Self-balancing tree structure that maintains sorted data and is commonly used in databases and file systems",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(log(n))",search:"O(log(n))",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"Red-Black-Tree",shape:"Red-Black-Tree.png",group:"Tree",description:"Self-balancing binary search tree that maintains balance through color-coded nodes",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(log(n))",search:"O(log(n))",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"Splay-Tree",shape:"Splay-Tree.png",group:"Tree",description:"Self-adjusting binary search tree. It reorganizes itself during operations to improve access times for frequently accessed nodes",time:{average:{access:"N/A",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"N/A",search:"O(log(n))",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"AVL-Tree",shape:"Binary-AVL-Tree.png",group:"Tree",description:"Self-balancing binary search tree. It ensures that the height difference between left and right subtrees is at most one",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(log(n))",search:"O(log(n))",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"KD-Tree",shape:"KD-Tree.png",group:"Tree",description:"Binary tree used for efficient multidimensional data search. It partitions space into regions based on data points",time:{average:{access:"Θ(log(n))",search:"Θ(log(n))",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(n)",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n)"}},{name:"Min-Heap",shape:"Min-Heap.png",group:"Tree",description:"The parent is less than or equal to its children",time:{average:{access:"Θ(1)",search:"Θ(n)",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(1)",search:"O(n)",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"Max-Heap",shape:"Max-Heap.png",group:"Tree",description:"The parent is greater than or equal to its children",time:{average:{access:"Θ(1)",search:"Θ(n)",insertion:"Θ(log(n))",deletion:"Θ(log(n))"},worst:{access:"O(1)",search:"O(n)",insertion:"O(log(n))",deletion:"O(log(n))"}},space:{worst:"O(n)"}},{name:"Hash-Table",shape:"Hash-Table.png",group:"Other",description:"Uses a hash function to map keys to indices in an array",time:{average:{access:"N/A",search:"Θ(1)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"N/A",search:"O(n)",insertion:"O(n)",deletion:"O(n)"}},space:{worst:"O(n)"}},{name:"Graph",shape:"Graph.png",group:"Other",description:"Consists of nodes connected by edges",time:{average:{access:"Θ(1)",search:"Θ(V + E)",insertion:"Θ(1)",deletion:"Θ(1)"},worst:{access:"O(1)",search:"O(V + E)",insertion:"O(1)",deletion:"O(1)"}},space:{worst:"O(V + E)"}}],St=[{name:"Object",description:"An instance of a class that encapsulates data and behavior."},{name:"Class",description:"A blueprint for creating objects, defining their attributes (data) and methods (behavior)."},{name:"Inheritance",description:"A mechanism in OOP that allows a class to inherit properties and behaviors from another class, promoting code reusability and establishing a parent-child relationship."},{name:"Polymorphism",description:"The ability for objects of different classes to be treated as objects of a common superclass, enabling methods to be invoked dynamically based on the type of object."},{name:"Abstraction",description:"The process of hiding complex implementation details and exposing only the essential features of an object, making it easier to understand and use."},{name:"Encapsulation",description:"The bundling of data and methods within a class, restricting access to the internal state of an object and promoting data integrity by controlling how data is accessed and modified."}],Tt=[{name:"Single Responsibility",description:"A class should have only one reason to change, meaning it should have only one responsibility or job."},{name:"Open / Closed",description:"Software entities (classes, modules, functions, etc.) should be open for extension but closed for modification, allowing new functionality to be added without altering existing code."},{name:"Liskov Substitution",description:"Objects of a superclass should be replaceable with objects of its subclasses without affecting the correctness of the program."},{name:"Interface Segregation",description:"Clients should not be forced to depend on interfaces they do not use. Instead, interfaces should be specific to the needs of the client."},{name:"Dependency Inversion",description:"High-level modules should not depend on low-level modules. Both should depend on abstractions. Abstractions should not depend on details; details should depend on abstractions."}],Ct=[{name:"Singleton",description:"Ensures that a class has only one instance and provides a global point of access to that instance."},{name:"Factory Method",description:"Defines an interface for creating an object but allows subclasses to alter the type of objects that will be created."},{name:"Abstract Factory",description:"Provides an interface for creating families of related or dependent objects without specifying their concrete classes."},{name:"Builder",description:"Separates the construction of a complex object from its representation, allowing the same construction process to create different representations."},{name:"Prototype",description:"Creates new objects by copying an existing object, typically used when the creation of a new instance is more efficient than creating it from scratch or with initial parameters."},{name:"Adapter",description:"Allows incompatible interfaces to work together by providing a bridge between them."},{name:"Decorator",description:"Attaches additional responsibilities to an object dynamically, providing a flexible alternative to subclassing for extending functionality."},{name:"Observer",description:"Defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically."},{name:"Strategy",description:"Defines a family of algorithms, encapsulates each one, and makes them interchangeable."},{name:"Command",description:"Encapsulates a request as an object, thereby allowing for parameterization of clients with queues, requests, and operations."}],ie={oop:St,solid:Tt,design:Ct},$t=[{title:"PEP 8 (Style Guide)",notes:"black | isort | pylint | mypy | pyright | ruff"},{title:"PEP 484",notes:"Type Hints"},{title:"Immutables",notes:"tuple | frozenset | int | float | str | bool"},{title:"Testing",notes:"pytest"},{title:"Dependency Manager",notes:"pip | pdm | conda | poetry"},{title:"Virtual Environments",notes:"venv"}],At=[{index:1,description:"Beautiful is better than ugly."},{index:2,description:"Explicit is better than implicit."},{index:3,description:"Simple is better than complex."},{index:4,description:"Complex is better than complicated."},{index:5,description:"Flat is better than nested."},{index:6,description:"Sparse is better than dense."},{index:7,description:"Readability counts."},{index:8,description:"Special cases aren't special enough to break the rules."},{index:9,description:"Although practicality beats purity."},{index:10,description:"Errors should never pass silently."},{index:11,description:"Unless explicitly silenced."},{index:12,description:"In the face of ambiguity, refuse the temptation to guess."},{index:13,description:"There should be one-- and preferably only one --obvious way to do it."},{index:14,description:"Although that way may not be obvious at first unless you're Dutch."},{index:15,description:"Now is better than never."},{index:16,description:"Although never is often better than *right* now."},{index:17,description:"If the implementation is hard to explain, it's a bad idea."},{index:18,description:"If the implementation is easy to explain, it may be a good idea."},{index:19,description:"Namespaces are one honking great idea -- let's do more of those!"}],Lt=[{method:"__new__",description:"Creates a new instance of a class."},{method:"__init__",description:"Initializes an object when it is created."},{method:"__call__",description:"Enables objects to be called like functions."},{method:"__dir__",description:"Returns the attributes of a class."},{method:"__repr__",description:"Returns an unambiguous string representation of the object."},{method:"__str__",description:"Returns a readable string representation of the object."},{method:"__len__",description:"Returns the length of the object."},{method:"__getitem__",description:"Enables indexing and slicing operations."},{method:"__setitem__",description:"Enables setting values using indexing."},{method:"__delitem__",description:"Enables deletion of items using indexing."},{method:"__iter__",description:"Returns an iterator object for iteration."},{method:"__next__",description:"Retrieves the next item in the iteration sequence."},{method:"__enter__",description:"Sets up the context for a with statement."},{method:"__exit__",description:"Cleans up resources when the with statement exits."},{method:"__getattr__",description:"Handles attribute access when an attribute is not found."},{method:"__setattr__",description:"Handles setting attribute values."},{method:"__delattr__",description:"Handles deletion of attributes."},{method:"__eq__",description:"Defines equality comparison."},{method:"__ne__",description:"Defines inequality comparison."},{method:"__lt__",description:"Defines less than comparison."},{method:"__gt__",description:"Defines greater than comparison."},{method:"__le__",description:"Defines less than or equal to comparison."},{method:"__ge__",description:"Defines greater than or equal to comparison."},{method:"__del__",description:"Cleans up resources when an object is about to be destroyed."},{method:"__hash__",description:"Returns the hash value of the object."}],be={others:$t,zen:At,magic:Lt};var Dt=0;function n(t,e,i,r,o,s){var l,c,h={};for(c in e)c=="ref"?l=e[c]:h[c]=e[c];var d={type:t,props:h,key:i,ref:l,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--Dt,__i:-1,__u:0,__source:o,__self:s};if(typeof t=="function"&&(l=t.defaultProps))for(c in l)h[c]===void 0&&(h[c]=l[c]);return f.vnode&&f.vnode(d),d}function Pt(){return n("svg",{width:"800",height:"480",xmlns:"http://www.w3.org/2000/svg",children:[n("path",{d:"M50 0 L 50 450 L 800 450 L 800 0 Z",fill:"transparent",stroke:"black","stroke-width":"2"}),n("path",{d:"M50 448 L 800 450",fill:"transparent",stroke:"#53d000","stroke-width":"4"}),n("text",{x:"700",y:"468",fill:"black",children:"O(1)"}),n("path",{d:"M50 448 L 800 438",fill:"transparent",stroke:"#c8ea00","stroke-width":"4"}),n("text",{x:"700",y:"436",fill:"black",children:"O(log n)"}),n("path",{d:"M50 450 L 800 400",fill:"transparent",stroke:"#ffeb3b","stroke-width":"4"}),n("text",{x:"760",y:"390",fill:"black",children:"O(n)"}),n("path",{d:"M50 450 Q 400 350, 800 150",fill:"transparent",stroke:"#ffeb3b","stroke-width":"4"}),n("text",{x:"630",y:"190",fill:"black",children:"O(n log n)"}),n("path",{d:"M50 450 Q 180 380, 250 0",fill:"transparent",stroke:"#ffc543","stroke-width":"4"}),n("text",{x:"260",y:"30",fill:"black",children:"O(n^2)"}),n("path",{d:"M50 450 Q 180 380, 180 0",fill:"transparent",stroke:"#ffc543","stroke-width":"4"}),n("text",{x:"190",y:"24",fill:"black",children:"O(n^3)"}),n("path",{d:"M50 450 C 100 430, 120 350, 120 0",fill:"transparent",stroke:"#ff8989","stroke-width":"4"}),n("text",{x:"125",y:"22",fill:"black",children:"O(2^n)"}),n("path",{d:"M50 450 C 80 450, 80 350, 80 0",fill:"transparent",stroke:"#ff8989","stroke-width":"4"}),n("text",{x:"82",y:"20",fill:"black",children:"O(n!)"}),n("text",{x:"0",y:"0",transform:"translate(30 230) rotate(-90)",style:" text-anchor: middle; font-size: 20px; color: #555; font-size: 20px; color: #555; ",fill:"black",children:"Operations"}),n("text",{x:"0",y:"0",transform:"translate(420 470)",style:"text-anchor: middle; font-size: 20px; color: #555",fill:"black",children:"Elements"})]})}function Et(){const t=yt.map(r=>n("tr",{children:[n("td",{children:r.name}),n("td",{children:r.notation}),n("td",{class:"tal",children:r.description}),n("td",{children:r.note})]})),e=r=>n("td",{class:`${ye[r.item]}`,children:r.name||r.item}),i=bt.map(r=>n("tr",{children:[n("td",{children:r.name}),n(e,{name:r.notation,item:r.level}),n("td",{class:"tal",children:r.description}),n(e,{item:r.level})]}));return n(k,{children:[n("div",{class:"title-bar",children:n("span",{class:"title",children:"Asymptotic Notations"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{children:"Name"}),n("th",{children:"Notation"}),n("th",{children:"Description"}),n("th",{children:"Note"})]})}),n("tbody",{children:t})]}),n("br",{}),n("div",{class:"title-bar",children:n("span",{class:"title",children:"Time Complexities"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{children:"Name"}),n("th",{children:"Notation"}),n("th",{children:"Description"}),n("th",{children:"Quality"})]})}),n("tbody",{children:i})]}),n("div",{children:[n("br",{}),n("strong",{children:"Note:"})," log(n) without a specified base, it's usually assumed to be base 2."]}),n("br",{}),n("div",{class:"tac",children:[n("div",{class:"title-bar",style:"justify-content:center;",children:n("span",{class:"title",children:"Visual Chart"})}),n(Pt,{})]})]})}function Nt(){const t=N(""),e=Y(()=>kt.filter(o=>o.name.toLowerCase().includes(t.value.toLowerCase())||o.group.toLowerCase().includes(t.value.toLowerCase()))),i=o=>n("td",{class:`${ye[o.item]}`,children:o.item}),r=e.value.map(o=>n("tr",{children:[n("td",{children:o.name}),n("td",{children:n("img",{class:"shape",src:`./shapes/${o.shape}`})}),n("td",{children:o.group}),n("td",{class:"tal",children:o.description}),n(i,{item:o.time.average.access}),n(i,{item:o.time.average.search}),n(i,{item:o.time.average.insertion}),n(i,{item:o.time.average.deletion}),n(i,{item:o.time.worst.access}),n(i,{item:o.time.worst.search}),n(i,{item:o.time.worst.insertion}),n(i,{item:o.time.worst.deletion}),n(i,{item:o.space.worst})]}));return n(k,{children:[n("div",{class:"title-bar",children:[n("span",{class:"title",children:"Data Structures"}),n("input",{onInput:o=>t.value=o.target.value,placeholder:"Search"})]}),n("table",{children:[n("thead",{children:[n("tr",{children:[n("th",{colspan:4}),n("th",{colspan:8,children:"Time Complexity"}),n("th",{children:"Space Complexity"})]}),n("tr",{children:[n("th",{colspan:4}),n("th",{colspan:4,children:"Average"}),n("th",{colspan:4,children:"Worst"}),n("th",{children:"Worst"})]}),n("tr",{children:[n("th",{style:"width: 140px",children:"Data Structure"}),n("th",{style:"width: 100px",children:"Shape"}),n("th",{style:"width: 60px",children:"Group"}),n("th",{style:"width: 240px",children:"Description"}),n("th",{children:"Access"}),n("th",{children:"Search"}),n("th",{children:"Insertion"}),n("th",{children:"Deletion"}),n("th",{children:"Access"}),n("th",{children:"Search"}),n("th",{children:"Insertion"}),n("th",{children:"Deletion"}),n("th",{})]})]}),n("tbody",{children:r})]})]})}function jt(){const t=N(""),e=Y(()=>wt.filter(o=>o.name.toLowerCase().includes(t.value.toLowerCase()))),i=o=>n("td",{class:`${ye[o.item]}`,children:o.item}),r=e.value.map(o=>n("tr",{children:[n("td",{children:o.name}),n("td",{class:"tal",style:"height: 60px",children:o.description}),n(i,{item:o.time.best}),n(i,{item:o.time.average}),n(i,{item:o.time.worst}),n(i,{item:o.space.worst})]}));return n(k,{children:[n("div",{class:"title-bar",children:[n("span",{class:"title",children:"Sorting Algorithms"}),n("input",{onInput:o=>t.value=o.target.value,placeholder:"Search"})]}),n("table",{children:[n("thead",{children:[n("tr",{children:[n("th",{colspan:2}),n("th",{colspan:3,children:"Time Complexity"}),n("th",{children:"Space Complexity"})]}),n("tr",{children:[n("th",{style:"width: 100px",children:"Algorithm"}),n("th",{style:"width: 600px",children:"Description"}),n("th",{children:"Best"}),n("th",{children:"Average"}),n("th",{children:"Worst"}),n("th",{children:"Worst"})]})]}),n("tbody",{children:r})]})]})}function It(){const t=Ne.array.map(i=>n("tr",{children:[n("td",{children:i.name}),n("td",{class:"tal",children:i.description}),n("td",{children:i.average}),n("td",{children:i.worst})]})),e=Ne.graph.map(i=>n("tr",{children:[n("td",{children:i.name}),n("td",{class:"tal",children:i.description}),n("td",{children:i.average}),n("td",{children:i.worst})]}));return n(k,{children:[n("div",{class:"title-bar",children:n("span",{class:"title",children:"Array Search Operations"})}),n("div",{children:n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 100px",children:"Algorithm"}),n("th",{children:"Description"}),n("th",{children:"Average Time Complexity"}),n("th",{children:"Worst Time Complexity"})]})}),n("tbody",{children:[t," "]})]})}),n("br",{}),n("div",{class:"title-bar",children:n("span",{class:"title",children:"Graph Search Operations"})}),n("div",{style:"display: flex",children:[n("div",{children:n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 100px",children:"Algorithm"}),n("th",{children:"Description"}),n("th",{children:"Average Time Complexity"}),n("th",{children:"Worst Time Complexity"})]})}),n("tbody",{children:[e," "]})]})}),n("div",{class:"graph-help",style:"width: 440px",children:n("ul",{children:[n("li",{children:[n("code",{children:"v"}),": Number of vertices (nodes) in the graph."]}),n("li",{children:[n("code",{children:"e"}),": Number of edges in the graph."]}),n("li",{children:[n("code",{children:"b"}),": Branching factor of the search tree."]}),n("li",{children:[n("code",{children:"d"}),": Depth of the optimal solution."]})]})})]})]})}function Ht(){const t=ie.oop.map(r=>n("tr",{children:[n("td",{children:r.name}),n("td",{class:"tal",children:r.description})]})),e=ie.solid.map(r=>n("tr",{children:[n("td",{children:r.name}),n("td",{class:"tal",children:r.description})]})),i=ie.design.map(r=>n("tr",{children:[n("td",{children:r.name}),n("td",{class:"tal",children:r.description})]}));return n(k,{children:[n("div",{class:"title-bar",children:n("span",{class:"title",children:"Object-Oriented Programming (OOP)"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 100px",children:"Name"}),n("th",{children:"Description"})]})}),n("tbody",{children:t})]}),n("br",{}),n("div",{class:"title-bar",children:n("span",{class:"title",children:"Solid Principles"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 160px",children:"Name"}),n("th",{children:"Description"})]})}),n("tbody",{children:e})]}),n("br",{}),n("div",{class:"title-bar",children:n("span",{class:"title",children:"Software Design Patterns"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 160px",children:"Pattern"}),n("th",{children:"Description"})]})}),n("tbody",{children:i})]})]})}function Ft(){const t=N(""),e=Y(()=>be.magic.filter(i=>i.method.toLowerCase().includes(t.value.toLowerCase())||i.description.toLowerCase().includes(t.value.toLowerCase())));return n(k,{children:[n("div",{class:"title-bar",children:[n("span",{class:"title",children:"Dunder Methods"}),n("input",{onInput:i=>t.value=i.target.value,placeholder:"Search"})]}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 160px",children:"Magic Method"}),n("th",{children:"Description"})]})}),n("tbody",{children:e.value.map(i=>n("tr",{children:[n("td",{children:i.method}),n("td",{class:"tal",children:i.description})]}))})]})]})}function Mt(){const t=N(""),e=Y(()=>be.zen.filter(i=>i.description.toLowerCase().includes(t.value.toLowerCase())));return n(k,{children:[n("div",{class:"title-bar",children:[n("span",{class:"title",children:"PEP 20 – The Zen of Python"}),n("input",{style:"display:none;",onInput:i=>t.value=i.target.value,placeholder:"Search"})]}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 30px",children:"Index"}),n("th",{children:"Description"})]})}),n("tbody",{children:e.value.map(i=>n("tr",{children:[n("td",{children:i.index}),n("td",{class:"tal",children:i.description})]}))})]})]})}function Bt(){return n(k,{children:[n("div",{class:"title-bar",children:n("span",{class:"title",children:"Useful Notes"})}),n("table",{children:[n("thead",{children:n("tr",{children:[n("th",{style:"width: 160px",children:"Title"}),n("th",{children:"Notes"})]})}),n("tbody",{children:be.others.map(t=>n("tr",{children:[n("td",{children:t.title}),n("td",{class:"tal",children:t.notes})]}))})]})]})}function Ut(){return n("div",{style:"display: flex; justify-content: space-between",children:[n("div",{children:n(Ft,{})}),n("div",{children:n(Mt,{})}),n("div",{children:n(Bt,{})})]})}function qt(){const t=N(0),e=(i,r)=>t.value===i?r:null;return n(k,{children:[n("ul",{class:"navbar",children:[n("li",{onClick:()=>t.value=0,children:"Big-O"}),n("li",{onClick:()=>t.value=1,children:"Data Structures"}),n("li",{onClick:()=>t.value=2,children:"Sorting"}),n("li",{onClick:()=>t.value=3,children:"Searching"}),n("li",{onClick:()=>t.value=4,children:"OOP"}),n("li",{onClick:()=>t.value=5,children:"Python"})]}),e(0,n(Et,{})),e(1,n(Nt,{})),e(2,n(jt,{})),e(3,n(It,{})),e(4,n(Ht,{})),e(5,n(Ut,{}))]})}ot(n(qt,{}),document.getElementById("app"));
